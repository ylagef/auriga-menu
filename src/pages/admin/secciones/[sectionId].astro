---
import Admin from '@components/Admin.astro'
import DetailSummaryContainer from '@components/admin/DetailSummaryContainer'
import LineCard from '@components/admin/LineCard'
import ButtonLink from '@components/ButtonLink.astro'
import ProductForm from '@components/ProductForm'
import SectionForm from '@components/SectionForm'
import { getSectionById, supabase } from 'src/utils/supabase'

const cookies = Astro.request.headers.get('cookie')

const token = cookies
  ?.split(';')
  .find((c) => c.trim().startsWith('sup-access-token='))
  ?.split('=')[1]

if (!token) return Astro.redirect('/admin/login')

const { data: user } = await supabase.auth.api.getUser(token)

if (user?.aud !== 'authenticated') return Astro.redirect('/admin/login')

let { sectionId } = Astro.params
sectionId = sectionId as number

const section = await getSectionById({ sectionId })
---

<Admin user={user}>
  <div class="flex flex-col gap-6">
    <DetailSummaryContainer title="Sección">
      <h3>{section.title}</h3>
    </DetailSummaryContainer>

    <LineCard client:visible label="Datos sección">
      <SectionForm client:visible section={section} defaultOpen />
    </LineCard>

    <LineCard label="Productos">
      {section.products.length === 0 && <span class="text-gray-600">Aún no hay productos</span>}

      {
        section.products
          ?.sort((a, b) => a.name.localeCompare(b.name))
          .map((product) => <ButtonLink href={`/admin/productos/${product.id}`}>{product.name}</ButtonLink>)
      }
    </LineCard>

    <LineCard client:visible label="Añadir producto">
      <ProductForm client:visible section={section} />
    </LineCard>
  </div>
</Admin>
