---
import Admin from '@components/Admin.astro'
import CategoryEditor from '@components/CategoryEditor.astro'
import ZoneEditor from '@components/ZoneEditor.astro'
import { RESTAURANT } from 'src/mock/auriga'
import { CategorySI, ZoneSI } from 'src/typesSupabase'
import { getCategoryBySlug, getZoneBySlug, supabase } from 'src/utils/supabase'

// const cookies = Astro.request.headers.get('cookie')
// const token = cookies
//   ?.split(';')
//   .find((c) => c.trim().startsWith('netlify-token='))
//   .split('=')[1]

// const user = await getUser(Astro.request)
// console.log({ user })
// if (!user) {
//   console.log('[...path].astro:Session not found - redirect to login')
//   return Astro.redirect('/admin/login')
// }

const { path } = Astro.params
const [zoneSlug, categorySlug] = path.toString().split('/')

let zone: ZoneSI, category: CategorySI
if (zoneSlug) {
  if (categorySlug) {
    category = await getCategoryBySlug({ categorySlug })
  } else {
    zone = await getZoneBySlug({ restaurantId: 1, zoneSlug })
  }
}

if (!zone && !category) return Astro.redirect('/admin')
---

<Admin>
  {zone && !category && <ZoneEditor zone={zone} />}
  {category && <CategoryEditor category={category} />}
  <!-- <ButtonLinksContainer>
    {!category && categories?.map((category) => <ButtonLink href={`/admin/${zoneId}/${category.id}`}>{category.buttonText}</ButtonLink>)} -->

  <!-- {
      category?.sections?.map((section) => (
        <div class="flex flex-col gap-4">
          {section.title && <h2 class="text-light-text text-center">{section.title}</h2>}
          <ButtonLinksContainer>
            {section.products.map((product) => (
              <ButtonLink href={`/admin/${zoneId}/${categoryId}/${product.id}`}>{product.name}</ButtonLink>
            ))}
          </ButtonLinksContainer>
        </div>
      ))
    }
    {category?.products?.map((product) => <ButtonLink href={`/admin/${zoneId}/${categoryId}/${product.id}`}>{product.name}</ButtonLink>)}
    {
      category?.menu?.courses.map((course) => (
        <div class="flex flex-col gap-4">
          {course.name && <h2 class="text-light-text text-center">{course.name}</h2>}
          <ButtonLinksContainer>
            {course.products.map((product) => (
              <ButtonLink href="#">{product}</ButtonLink>
            ))}
          </ButtonLinksContainer>
        </div>
      ))
    } -->

  <!-- <Divider theme="light" />

    <ButtonLink href="#">AÃ‘ADIR</ButtonLink>
  </ButtonLinksContainer> -->
</Admin>
