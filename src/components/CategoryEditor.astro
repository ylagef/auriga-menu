---
import { translations } from 'src/locales/translations'
import { CategorySI, EXTRA_SERVICES, SCHEDULES } from 'src/typesSupabase'

import ButtonInput from './ButtonInput'
import LineCard from './Linecard'

export interface Props {
  category: CategorySI
}
const { category } = Astro.props

// const categories = await getCategoriesByZoneId({ zoneId: zone.id })
---

<div class="flex flex-col gap-4 items-center">
  <LineCard client:visible label="Nombre">
    <ButtonInput
      client:visible
      callback={async () => {
        console.log('hey')
      }}
      initialText={category.buttonText}
    >
      {category?.buttonText}
    </ButtonInput>
  </LineCard>

  <LineCard client:visible label="Título">
    <ButtonInput
      client:visible
      callback={async () => {
        console.log('hey')
      }}
      initialText={category.categoryTitle}
    >
      {category?.categoryTitle}
    </ButtonInput>
  </LineCard>

  <LineCard client:visible label="Horarios">
    <div class="flex flex-col gap-2">
      {
        Object.entries(SCHEDULES).map(([key, schedule]) => (
          <div class="flex items-center gap-4">
            <input type="checkbox" id={key} checked={category.schedules?.includes(schedule)} />
            <label for={key}>{translations.schedules[schedule]}</label>
          </div>
        ))
      }
    </div>
  </LineCard>

  <LineCard client:visible label="Servicios extra">
    <div class="flex flex-col gap-2">
      {
        Object.entries(EXTRA_SERVICES).map(([key, extraService]) => (
          <div class="flex items-center gap-4">
            <input type="checkbox" id={key} checked={category.extraServices?.includes(extraService)} />
            <label for={key}>{translations.extraServices[extraService]}</label>
          </div>
        ))
      }
    </div>
  </LineCard>

  <LineCard client:visible label="Tipo de categoría">
    <div class="flex">
      <div class={`flex py-2 px-6 ${category.type === 'menu' ? `bg-light-text/90` : `bg-light-text/30`} rounded-tl-xl rounded-bl-xl`}>MENU</div>
      <div class={`flex py-2 px-6 ${category.type === 'sections' ? `bg-light-text/90` : `bg-light-text/30`}`}>SECCIONES</div>
      <div class={`flex py-2 px-6 ${category.type === 'products' ? `bg-light-text/90` : `bg-light-text/30`} rounded-tr-xl rounded-br-xl`}>
        PRODUCTOS
      </div>
    </div>
  </LineCard>

  <!-- <LineCard client:visible label="Categorías">
    <ButtonLinksContainer>
      {categories?.map((category) => <ButtonLink href={`/admin/${zone.slug}/${category.id}`}>{category.buttonText}</ButtonLink>)}
    </ButtonLinksContainer>

    <div class="flex flex-col w-full">
      <Divider theme="dark" />

      <CategoryForm client:visible />
    </div>
  </LineCard>  -->
</div>

{
  /* <div class="pl-4">{category.menu && <MenuEditor menu={category.menu} />}</div>
          <div class="pl-4">{category.sections && <SectionsEditor sections={category.sections} />}</div>
          <div class="pl-4">
            {category.products && (
              <div>
                {category.products.map((product) => (
                  <ProductEditor product={product} />
                ))}
              </div>
            )}
          </div> */
}
